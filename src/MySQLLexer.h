/** \file
 *  This C header file was generated by $ANTLR version 3.5.2
 *
 *     -  From the grammar source file : MySQL.g
 *     -                            On : 2014-04-19 23:24:29
 *     -                 for the lexer : MySQLLexerLexer
 *
 * Editing it, at least manually, is not wise.
 *
 * C language generator and runtime by Jim Idle, jimi|hereisanat|idle|dotgoeshere|ws.
 *
 *
 * The lexer 
MySQLLexer

has the callable functions (rules) shown below,
 * which will invoke the code for the associated rule in the source grammar
 * assuming that the input stream is pointing to a token/text stream that could begin
 * this rule.
 *
 * For instance if you call the first (topmost) rule in a parser grammar, you will
 * get the results of a full parse, but calling a rule half way through the grammar will
 * allow you to pass part of a full token stream to the parser, such as for syntax checking
 * in editors and so on.
 *
 * The parser entry points are called indirectly (by function pointer to function) via
 * a parser context typedef pMySQLLexer, which is returned from a call to MySQLLexerNew().
 *
 * As this is a generated lexer, it is unlikely you will call it 'manually'. However
 * the methods are provided anyway.
 *
 * The methods in pMySQLLexer are  as follows:
 *
 *  - 
 void
      pMySQLLexer->A_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->B_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->C_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->D_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->E_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->F_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->G_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->H_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->I_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->J_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->K_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->L_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->M_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->N_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->O_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->P_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->Q_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->R_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->S_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->T_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->U_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->V_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->W_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->X_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->Y_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->Z_(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ABS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ACCESSIBLE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ACOS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ACTION(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ADD_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ADDDATE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ADDTIME(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->AES_DECRYPT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->AES_ENCRYPT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->AFTER_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->AGAINST(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->AGGREGATE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ALGORITHM_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ALL(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ALTER(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ANALYZE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ANY(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ARMSCII8(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->AS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ASC(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ASCII_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ASENSITIVE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ASIN(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->AT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ATAN(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ATAN2(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->AUTHORS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->AUTO_INCREMENT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->AUTOEXTEND_SIZE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->AVG(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->AVG_ROW_LENGTH(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BACKUP_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BEFORE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BEGIN_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BENCHMARK(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BETWEEN(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BIG5(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BIGINT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BIN(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BINARY(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BINLOG_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BIT_AND(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BIT_LENGTH(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BIT_OR(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BIT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BIT_XOR(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BLOB_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BLOCK_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BOOL_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BOOLEAN_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BOTH(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BTREE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BY_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BYTE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CACHE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CALL_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CASCADE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CASCADED(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CASE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CAST_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CEIL(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CEILING(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CHAIN_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CHANGE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CHANGED(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CHAR(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CHAR_LENGTH(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CHARACTER_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CHARSET(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CHECK_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CHECKSUM_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CIPHER_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CLIENT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CLOSE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->COALESCE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CODE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->COERCIBILITY(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->COLLATE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->COLLATION(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->COLUMN_FORMAT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->COLUMN_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->COLUMNS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->COMMENT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->COMMIT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->COMMITTED_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->COMPACT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->COMPLETION_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->COMPRESS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->COMPRESSED_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CONCAT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CONCAT_WS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CONCURRENT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CONDITION_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CONNECTION_ID(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CONNECTION_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CONSISTENT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CONSTRAINT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CONTAINS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CONTEXT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CONTINUE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CONTRIBUTORS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CONV(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CONVERT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CONVERT_TZ(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->COPY_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->COS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->COT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->COUNT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CP1250(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CP1251(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CP1256(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CP1257(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CP850(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CP852(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CP866(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CP932(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CPU_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CRC32(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CREATE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CROSECOND(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CROSS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CUBE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CURDATE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CURRENT_TIMESTAMP(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CURRENT_USER(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CURSOR_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->CURTIME(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DATABASE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DATAFILE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DATA_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DATE_ADD(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DATE_FORMAT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DATE_SUB(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DATE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DATEDIFF(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DATETIME(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DAY_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DAY_HOUR(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DAY_MICROSECOND(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DAY_MINUTE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DAY_SECOND(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DAYNAME(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DAYOFMONTH(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DAYOFWEEK(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DAYOFYEAR(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DEALLOCATE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DEC8(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DECIMAL_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DECLARE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DECODE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DEFAULT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DEFINER(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DEGREES(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DELAY_KEY_WRITE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DELAYED_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DELETE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DES_DECRYPT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DES_ENCRYPT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DES_KEY_FILE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DESC(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DETERMINISTIC_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DIRECTORY_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DISABLE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DISCARD(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DISK_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DISTINCT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DISTINCTROW(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DO_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DOUBLE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DROP(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DUAL_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DUMPFILE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DUPLICATE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DYNAMIC_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->EACH_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ELSE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ELSIF_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ELT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ENABLE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ENCLOSED(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ENCODE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ENCRYPT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->END_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ENDS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ENGINE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ENGINES_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ENUM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ERRORS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ESCAPE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ESCAPED(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->EUCJPMS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->EUCKR(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->EVENT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->EVENTS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->EVERY_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->EXCHANGE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->EXECUTE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->EXCLUSIVE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->EXISTS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->EXIT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->EXP(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->EXPANSION_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->EXPORT_SET(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->EXTENDED_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->EXTENT_SIZE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->EXTRACT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FALSE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FAST_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FAULTS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FIELDS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FETCH_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FIELD(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FILE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FIND_IN_SET(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FIRST_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FIXED_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FLOAT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FLOOR(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FLUSH_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FOR_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FORCE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FOREIGN(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FORMAT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FOUND_ROWS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FOUND_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FROM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FROM_BASE64(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FROM_DAYS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FROM_UNIXTIME(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FULL(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FULLTEXT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->FUNCTION_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->GB2312(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->GBK(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->GEOMETRY_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->GEOMETRYCOLLECTION(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->GEOSTD8(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->GET_FORMAT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->GET_LOCK(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->GLOBAL_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->GRANT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->GRANTS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->GREEK(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->GROUP_CONCAT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->GROUP_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->HANDLER_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->HASH_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->HAVING(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->HEBREW(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->HELP_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->HEX(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->HIGH_PRIORITY(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->HOST_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->HOSTS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->HOUR(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->HOUR_MICROSECOND(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->HOUR_MINUTE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->HOUR_SECOND(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->HP8(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->IDENTIFIED_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->IF(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->IFNULL(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->IGNORE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->IMPORT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->IN_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->INDEX_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->INDEXES(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->INET_ATON(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->INET_NTOA(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->INFILE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->INITIAL_SIZE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->INNER_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->INOUT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->INPLACE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->INSENSITIVE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->INSERT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->INSERT_METHOD(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->INSTALL_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->INSTR(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->INT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->INTEGER_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->INTERVAL_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->INTO(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->INVOKER_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->IO_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->IPC_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->IS_FREE_LOCK(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->IS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->IS_USED_LOCK(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ISOLATION(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ISSUER_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ITERATE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->JOIN_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->KEY_BLOCK_SIZE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->KEY_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->KEYBCS2(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->KEYS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->KILL_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->KOI8R(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->KOI8U(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LANGUAGE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LAST_DAY(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LAST_INSERT_ID(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LAST_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LATIN1_BIN(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LATIN1_GENERAL_CS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LATIN1(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LATIN2(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LATIN5(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LATIN7(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LEADING(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LEAVE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LEAVES(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LEFT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LENGTH(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LESS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LEVEL_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LIKE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LIMIT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LINEAR_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LINES(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LINESTRING(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LIST_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LN(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LOAD(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LOAD_FILE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LOCAL_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LOCATE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LOCK(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LOCKS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LOG(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LOG10(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LOG2(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LOGFILE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LOGS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LONG_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LONGBLOB(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LONGTEXT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LOOP_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LOW_PRIORITY(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LOWER(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LPAD(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LTRIM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MACCE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MACROMAN(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MAKE_SET(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MAKEDATE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MAKETIME(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MASTER_CONNECT_RETRY(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MASTER_HOST_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MASTER_LOG_FILE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MASTER_LOG_POS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MASTER_PASSWORD_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MASTER_PORT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MASTER_POS_WAIT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MASTER_SERVER_ID_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MASTER_SSL_CA_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MASTER_SSL_CAPATH_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MASTER_SSL_CERT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MASTER_SSL_CIPHER_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MASTER_SSL_KEY_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MASTER_SSL_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MASTER_SSL_VERIFY_SERVER_CERT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MASTER_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MASTER_USER_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MATCH(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MAX_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MAX_CONNECTIONS_PER_HOUR(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MAX_QUERIES_PER_HOUR(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MAX_ROWS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MAX_SIZE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MAX_UPDATES_PER_HOUR(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MAX_USER_CONNECTIONS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MAXVALUE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MD5(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MEDIUM_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MEDIUMBLOB(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MEDIUMINT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MEDIUMTEXT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MEMORY_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MERGE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MICROSECOND(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MID(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MIGRATE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MIN_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MIN_ROWS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MINUTE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MINUTE_MICROSECOND(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MINUTE_SECOND(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MOD(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MODE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MODIFIES_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MODIFY_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MONTH(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MONTHNAME(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MULTILINESTRING(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MULTIPOINT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MULTIPOLYGON(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MUTEX_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->NAME_CONST(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->NAME_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->NAMES_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->NATIONAL_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->NATURAL(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->NCHAR_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->NEW_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->NEXT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->NO_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->NO_WAIT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->NO_WRITE_TO_BINLOG(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->NODEGROUP_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->NONE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->NOT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->NOW(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->NULL_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->NUMERIC_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->NVARCHAR_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->OCT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->OFFSET_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->OJ_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->OLD_PASSWORD(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ON(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ONE_SHOT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ONE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->OPEN_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->OPTIMIZE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->OPTION(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->OPTIONALLY(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->OPTIONS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ORD(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ORDER_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->OUT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->OUTER(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->OUTFILE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->OWNER_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PACK_KEYS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PAGE_CHECKSUM_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PAGE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PARSER_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PARTIAL(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PARTITION_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PARTITIONING_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PARTITIONS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PASSWORD(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PERIOD_ADD(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PERIOD_DIFF(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PHASE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PI(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PLUGIN_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PLUGINS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->POINT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->POLYGON(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PORT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->POW(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->POWER(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PRECISION(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PREPARE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PRESERVE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PREV_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PRIMARY_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PRIVILEGES(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PROCEDURE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PROCESS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PROCESSLIST_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PROFILE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PROFILES_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PURGE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->QUARTER(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->QUERY_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->QUICK(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->QUOTE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RADIANS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RAND(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RANGE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->READ_ONLY_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->READ_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->READ_WRITE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->READS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->REAL(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->REBUILD_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RECOVER_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->REDO_BUFFER_SIZE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->REDOFILE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->REDUNDANT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->REFERENCES(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->REGEXP(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RELAY_LOG_FILE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RELAY_LOG_POS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RELEASE_LOCK(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RELEASE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RELOAD(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->REMOVE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RENAME(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->REORGANIZE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->REPAIR(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->REPEAT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->REPEATABLE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->REPLACE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->REPLICATION(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->REQUIRE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RESET_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RESOURCES(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RESTORE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RESTRICT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RESUME_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RETURN_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RETURNS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->REVERSE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->REVOKE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RIGHT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ROLLBACK(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ROLLUP_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ROUND(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ROUTINE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ROW_FORMAT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ROW_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ROWS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RPAD(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RTREE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RTRIM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SAVEPOINT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SCHEDULE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SCHEMA(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SEC_TO_TIME(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SECOND(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SECOND_MICROSECOND(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SECURITY_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SELECT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SENSITIVE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SEPARATOR_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SERIAL_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SERIALIZABLE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SERVER_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SESSION_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SESSION_USER(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SET_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SHARED_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SHARE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SHOW(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SHUTDOWN(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SIGN(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SIGNED_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SIMPLE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SIN(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SJIS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SLAVE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SLEEP(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SMALLINT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SNAPSHOT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SOCKET_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SONAME_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SOUNDEX(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SOUNDS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SOURCE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SPACE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SPATIAL_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SPECIFIC_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SQL_BIG_RESULT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SQL_BUFFER_RESULT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SQL_CACHE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SQL_CALC_FOUND_ROWS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SQL_NO_CACHE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SQL_SMALL_RESULT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SQL_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SQL_THREAD(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SQLEXCEPTION_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SQLSTATE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SQLWARNING_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SQRT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SSL_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->START_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->STARTING(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->STATS_AUTO_RECALC(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->STATS_PERSISTENT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->STARTS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->STATUS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->STD(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->STDDEV(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->STDDEV_POP(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->STDDEV_SAMP(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->STOP_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->STORAGE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->STR_TO_DATE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->STRAIGHT_JOIN(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->STRCMP(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->STRING_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SUBJECT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SUBPARTITION_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SUBPARTITIONS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SUBSTRING(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SUBSTRING_INDEX(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SUBTIME(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SUM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SUPER_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SUSPEND_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SWAPS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SWE7(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SWITCHES_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SYSDATE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SYSTEM_USER(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TABLE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TABLE_CHECKSUM_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TABLES(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TABLESPACE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TAN(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TEMPORARY(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TEMPTABLE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TERMINATED(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TEXT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->THAN_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->THEN_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TIME_FORMAT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TIME_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TIME_TO_SEC(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TIMEDIFF(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TIMESTAMP(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TIMESTAMPADD(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TIMESTAMPDIFF(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TINYBLOB(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TINYINT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TINYTEXT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TIS620(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TO_BASE64(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TO_DAYS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TO_SECONDS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TO_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TRAILING(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TRANSACTION(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TRANSACTIONAL_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TRIGGER_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TRIGGERS_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TRIM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TRUE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TRUNCATE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TYPE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TYPES_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UCS2(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UJIS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UNCOMMITTED_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UNCOMPRESS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UNCOMPRESSED_LENGTH(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UNDEFINED_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UNDO_BUFFER_SIZE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UNDO_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UNDOFILE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UNHEX(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UNICODE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UNINSTALL_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UNION_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UNIQUE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UNIX_TIMESTAMP(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UNKNOWN_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UNLOCK_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UNSIGNED_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UNTIL_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UPDATE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UPGRADE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UPPER(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->USAGE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->USE_FRM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->USE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->USER(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->USING_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UTC_DATE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UTC_TIME(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UTC_TIMESTAMP(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UTF16LE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UTF16(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UTF32(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UTF8(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->UUID(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->VALUE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->VALUES(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->VAR_POP(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->VAR_SAMP(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->VARBINARY(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->VARCHAR(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->VARIABLES(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->VARIANCE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->VARYING(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->VERSION_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->VIEW_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->WAIT_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->WARNINGS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->WEEK(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->WEEKDAY(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->WEEKOFYEAR(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->WEIGHT_STRING(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->WHEN_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->WHERE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->WHILE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->WITH(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->WORK_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->WRAPPER_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->WRITE_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->X509_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->XA_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->XML_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->XOR(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->YEAR(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->YEAR_MONTH(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->YEARWEEK(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ZEROFILL(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DIVIDE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MOD_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->OR_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->AND_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ARROW(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->EQ_SYM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->NOT_EQ(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LET(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->GET(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SET_VAR(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SHIFT_LEFT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SHIFT_RIGHT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ALL_FIELDS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SEMI(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->COLON(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->DOT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->COMMA(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ASTERISK(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RPAREN(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LPAREN(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->RBRACK(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LBRACK(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->PLUS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->MINUS(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->NEGATION(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->VERTBAR(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BITAND(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->POWER_OP(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->GTH(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->LTH(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->INTEGER_NUM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->HEX_DIGIT_FRAGMENT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->HEX_DIGIT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->BIT_NUM(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->REAL_NUMBER(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->TEXT_STRING(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ID(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->USER_VAR(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->USER_VAR_SUBFIX1(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->USER_VAR_SUBFIX2(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->USER_VAR_SUBFIX3(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->USER_VAR_SUBFIX4(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->WHITE_SPACE(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->SL_COMMENT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->ML_COMMENT(pMySQLLexer)
 *  - 
 void
      pMySQLLexer->Tokens(pMySQLLexer)
 *
 * The return type for any particular rule is of course determined by the source
 * grammar file.
 */
// [The "BSD license"]
// Copyright (c) 2005-2009 Jim Idle, Temporal Wave LLC
// http://www.temporal-wave.com
// http://www.linkedin.com/in/jimidle
//
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#ifndef	_MySQLLexer_H
#define _MySQLLexer_H
/* =============================================================================
 * Standard antlr3 C runtime definitions
 */
#include    <antlr3.h>

/* End of standard antlr 3 runtime definitions
 * =============================================================================
 */

#ifdef __cplusplus
extern "C" {
#endif

// Forward declare the context typedef so that we can use it before it is
// properly defined. Delegators and delegates (from import statements) are
// interdependent and their context structures contain pointers to each other
// C only allows such things to be declared if you pre-declare the typedef.
//
typedef struct MySQLLexer_Ctx_struct MySQLLexer, * pMySQLLexer;





#ifdef	ANTLR3_WINDOWS
// Disable: Unreferenced parameter,							- Rules with parameters that are not used
//          constant conditional,							- ANTLR realizes that a prediction is always true (synpred usually)
//          initialized but unused variable					- tree rewrite variables declared but not needed
//          Unreferenced local variable						- lexer rule declares but does not always use _type
//          potentially unitialized variable used			- retval always returned from a rule
//			unreferenced local function has been removed	- susually getTokenNames or freeScope, they can go without warnigns
//
// These are only really displayed at warning level /W4 but that is the code ideal I am aiming at
// and the codegen must generate some of these warnings by necessity, apart from 4100, which is
// usually generated when a parser rule is given a parameter that it does not use. Mostly though
// this is a matter of orthogonality hence I disable that one.
//
#pragma warning( disable : 4100 )
#pragma warning( disable : 4101 )
#pragma warning( disable : 4127 )
#pragma warning( disable : 4189 )
#pragma warning( disable : 4505 )
#pragma warning( disable : 4701 )
#endif

/** Context tracking structure for 
MySQLLexer

 */
struct MySQLLexer_Ctx_struct
{
    /** Built in ANTLR3 context tracker contains all the generic elements
     *  required for context tracking.
     */
    pANTLR3_LEXER    pLexer;

     void
     (*mA_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mB_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mC_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mD_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mE_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mF_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mG_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mH_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mI_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mJ_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mK_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mL_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mM_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mN_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mO_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mP_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mQ_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mR_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mS_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mT_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mU_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mV_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mW_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mX_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mY_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mZ_)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mABS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mACCESSIBLE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mACOS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mACTION)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mADD_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mADDDATE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mADDTIME)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mAES_DECRYPT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mAES_ENCRYPT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mAFTER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mAGAINST)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mAGGREGATE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mALGORITHM_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mALL)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mALTER)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mANALYZE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mANY)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mARMSCII8)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mAS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mASC)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mASCII_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mASENSITIVE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mASIN)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mAT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mATAN)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mATAN2)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mAUTHORS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mAUTO_INCREMENT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mAUTOEXTEND_SIZE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mAVG)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mAVG_ROW_LENGTH)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBACKUP_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBEFORE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBEGIN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBENCHMARK)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBETWEEN)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBIG5)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBIGINT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBIN)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBINARY)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBINLOG_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBIT_AND)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBIT_LENGTH)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBIT_OR)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBIT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBIT_XOR)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBLOB_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBLOCK_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBOOL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBOOLEAN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBOTH)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBTREE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBYTE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCACHE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCALL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCASCADE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCASCADED)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCASE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCAST_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCEIL)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCEILING)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCHAIN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCHANGE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCHANGED)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCHAR)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCHAR_LENGTH)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCHARACTER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCHARSET)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCHECK_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCHECKSUM_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCIPHER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCLIENT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCLOSE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCOALESCE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCODE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCOERCIBILITY)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCOLLATE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCOLLATION)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCOLUMN_FORMAT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCOLUMN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCOLUMNS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCOMMENT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCOMMIT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCOMMITTED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCOMPACT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCOMPLETION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCOMPRESS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCOMPRESSED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCONCAT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCONCAT_WS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCONCURRENT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCONDITION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCONNECTION_ID)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCONNECTION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCONSISTENT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCONSTRAINT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCONTAINS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCONTEXT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCONTINUE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCONTRIBUTORS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCONV)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCONVERT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCONVERT_TZ)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCOPY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCOS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCOT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCOUNT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCP1250)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCP1251)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCP1256)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCP1257)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCP850)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCP852)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCP866)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCP932)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCPU_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCRC32)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCREATE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCROSECOND)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCROSS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCUBE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCURDATE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCURRENT_TIMESTAMP)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCURRENT_USER)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCURSOR_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCURTIME)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDATABASE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDATAFILE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDATA_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDATE_ADD)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDATE_FORMAT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDATE_SUB)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDATE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDATEDIFF)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDATETIME)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDAY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDAY_HOUR)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDAY_MICROSECOND)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDAY_MINUTE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDAY_SECOND)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDAYNAME)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDAYOFMONTH)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDAYOFWEEK)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDAYOFYEAR)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDEALLOCATE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDEC8)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDECIMAL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDECLARE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDECODE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDEFAULT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDEFINER)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDEGREES)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDELAY_KEY_WRITE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDELAYED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDELETE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDES_DECRYPT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDES_ENCRYPT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDES_KEY_FILE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDESC)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDETERMINISTIC_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDIRECTORY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDISABLE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDISCARD)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDISK_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDISTINCT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDISTINCTROW)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDO_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDOUBLE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDROP)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDUAL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDUMPFILE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDUPLICATE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDYNAMIC_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mEACH_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mELSE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mELSIF_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mELT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mENABLE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mENCLOSED)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mENCODE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mENCRYPT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mEND_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mENDS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mENGINE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mENGINES_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mENUM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mERRORS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mESCAPE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mESCAPED)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mEUCJPMS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mEUCKR)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mEVENT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mEVENTS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mEVERY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mEXCHANGE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mEXECUTE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mEXCLUSIVE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mEXISTS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mEXIT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mEXP)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mEXPANSION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mEXPORT_SET)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mEXTENDED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mEXTENT_SIZE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mEXTRACT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFALSE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFAST_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFAULTS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFIELDS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFETCH_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFIELD)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFILE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFIND_IN_SET)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFIRST_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFIXED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFLOAT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFLOOR)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFLUSH_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFOR_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFORCE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFOREIGN)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFORMAT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFOUND_ROWS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFOUND_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFROM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFROM_BASE64)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFROM_DAYS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFROM_UNIXTIME)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFULL)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFULLTEXT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mFUNCTION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mGB2312)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mGBK)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mGEOMETRY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mGEOMETRYCOLLECTION)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mGEOSTD8)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mGET_FORMAT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mGET_LOCK)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mGLOBAL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mGRANT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mGRANTS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mGREEK)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mGROUP_CONCAT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mGROUP_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mHANDLER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mHASH_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mHAVING)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mHEBREW)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mHELP_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mHEX)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mHIGH_PRIORITY)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mHOST_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mHOSTS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mHOUR)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mHOUR_MICROSECOND)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mHOUR_MINUTE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mHOUR_SECOND)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mHP8)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mIDENTIFIED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mIF)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mIFNULL)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mIGNORE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mIMPORT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mIN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mINDEX_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mINDEXES)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mINET_ATON)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mINET_NTOA)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mINFILE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mINITIAL_SIZE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mINNER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mINOUT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mINPLACE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mINSENSITIVE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mINSERT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mINSERT_METHOD)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mINSTALL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mINSTR)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mINT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mINTEGER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mINTERVAL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mINTO)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mINVOKER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mIO_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mIPC_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mIS_FREE_LOCK)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mIS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mIS_USED_LOCK)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mISOLATION)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mISSUER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mITERATE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mJOIN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mKEY_BLOCK_SIZE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mKEY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mKEYBCS2)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mKEYS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mKILL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mKOI8R)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mKOI8U)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLANGUAGE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLAST_DAY)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLAST_INSERT_ID)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLAST_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLATIN1_BIN)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLATIN1_GENERAL_CS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLATIN1)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLATIN2)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLATIN5)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLATIN7)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLEADING)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLEAVE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLEAVES)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLEFT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLENGTH)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLESS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLEVEL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLIKE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLIMIT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLINEAR_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLINES)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLINESTRING)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLIST_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLN)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLOAD)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLOAD_FILE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLOCAL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLOCATE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLOCK)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLOCKS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLOG)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLOG10)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLOG2)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLOGFILE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLOGS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLONG_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLONGBLOB)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLONGTEXT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLOOP_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLOW_PRIORITY)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLOWER)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLPAD)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLTRIM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMACCE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMACROMAN)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMAKE_SET)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMAKEDATE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMAKETIME)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMASTER_CONNECT_RETRY)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMASTER_HOST_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMASTER_LOG_FILE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMASTER_LOG_POS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMASTER_PASSWORD_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMASTER_PORT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMASTER_POS_WAIT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMASTER_SERVER_ID_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMASTER_SSL_CA_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMASTER_SSL_CAPATH_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMASTER_SSL_CERT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMASTER_SSL_CIPHER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMASTER_SSL_KEY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMASTER_SSL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMASTER_SSL_VERIFY_SERVER_CERT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMASTER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMASTER_USER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMATCH)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMAX_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMAX_CONNECTIONS_PER_HOUR)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMAX_QUERIES_PER_HOUR)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMAX_ROWS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMAX_SIZE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMAX_UPDATES_PER_HOUR)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMAX_USER_CONNECTIONS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMAXVALUE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMD5)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMEDIUM_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMEDIUMBLOB)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMEDIUMINT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMEDIUMTEXT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMEMORY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMERGE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMICROSECOND)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMID)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMIGRATE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMIN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMIN_ROWS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMINUTE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMINUTE_MICROSECOND)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMINUTE_SECOND)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMOD)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMODE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMODIFIES_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMODIFY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMONTH)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMONTHNAME)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMULTILINESTRING)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMULTIPOINT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMULTIPOLYGON)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMUTEX_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mNAME_CONST)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mNAME_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mNAMES_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mNATIONAL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mNATURAL)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mNCHAR_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mNEW_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mNEXT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mNO_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mNO_WAIT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mNO_WRITE_TO_BINLOG)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mNODEGROUP_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mNONE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mNOT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mNOW)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mNULL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mNUMERIC_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mNVARCHAR_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mOCT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mOFFSET_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mOJ_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mOLD_PASSWORD)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mON)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mONE_SHOT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mONE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mOPEN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mOPTIMIZE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mOPTION)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mOPTIONALLY)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mOPTIONS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mORD)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mORDER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mOUT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mOUTER)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mOUTFILE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mOWNER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPACK_KEYS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPAGE_CHECKSUM_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPAGE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPARSER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPARTIAL)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPARTITION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPARTITIONING_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPARTITIONS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPASSWORD)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPERIOD_ADD)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPERIOD_DIFF)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPHASE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPI)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPLUGIN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPLUGINS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPOINT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPOLYGON)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPORT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPOW)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPOWER)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPRECISION)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPREPARE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPRESERVE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPREV_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPRIMARY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPRIVILEGES)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPROCEDURE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPROCESS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPROCESSLIST_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPROFILE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPROFILES_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPURGE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mQUARTER)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mQUERY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mQUICK)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mQUOTE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRADIANS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRAND)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRANGE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREAD_ONLY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREAD_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREAD_WRITE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREADS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREAL)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREBUILD_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRECOVER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREDO_BUFFER_SIZE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREDOFILE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREDUNDANT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREFERENCES)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREGEXP)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRELAY_LOG_FILE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRELAY_LOG_POS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRELEASE_LOCK)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRELEASE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRELOAD)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREMOVE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRENAME)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREORGANIZE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREPAIR)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREPEAT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREPEATABLE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREPLACE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREPLICATION)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREQUIRE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRESET_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRESOURCES)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRESTORE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRESTRICT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRESUME_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRETURN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRETURNS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREVERSE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREVOKE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRIGHT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mROLLBACK)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mROLLUP_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mROUND)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mROUTINE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mROW_FORMAT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mROW_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mROWS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRPAD)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRTREE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRTRIM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSAVEPOINT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSCHEDULE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSCHEMA)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSEC_TO_TIME)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSECOND)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSECOND_MICROSECOND)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSECURITY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSELECT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSENSITIVE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSEPARATOR_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSERIAL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSERIALIZABLE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSERVER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSESSION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSESSION_USER)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSET_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSHARED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSHARE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSHOW)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSHUTDOWN)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSIGN)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSIGNED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSIMPLE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSIN)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSJIS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSLAVE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSLEEP)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSMALLINT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSNAPSHOT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSOCKET_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSONAME_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSOUNDEX)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSOUNDS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSOURCE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSPACE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSPATIAL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSPECIFIC_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSQL_BIG_RESULT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSQL_BUFFER_RESULT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSQL_CACHE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSQL_CALC_FOUND_ROWS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSQL_NO_CACHE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSQL_SMALL_RESULT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSQL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSQL_THREAD)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSQLEXCEPTION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSQLSTATE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSQLWARNING_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSQRT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSSL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSTART_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSTARTING)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSTATS_AUTO_RECALC)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSTATS_PERSISTENT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSTARTS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSTATUS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSTD)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSTDDEV)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSTDDEV_POP)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSTDDEV_SAMP)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSTOP_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSTORAGE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSTR_TO_DATE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSTRAIGHT_JOIN)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSTRCMP)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSTRING_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSUBJECT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSUBPARTITION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSUBPARTITIONS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSUBSTRING)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSUBSTRING_INDEX)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSUBTIME)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSUM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSUPER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSUSPEND_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSWAPS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSWE7)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSWITCHES_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSYSDATE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSYSTEM_USER)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTABLE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTABLE_CHECKSUM_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTABLES)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTABLESPACE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTAN)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTEMPORARY)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTEMPTABLE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTERMINATED)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTEXT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTHAN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTHEN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTIME_FORMAT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTIME_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTIME_TO_SEC)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTIMEDIFF)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTIMESTAMP)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTIMESTAMPADD)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTIMESTAMPDIFF)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTINYBLOB)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTINYINT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTINYTEXT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTIS620)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTO_BASE64)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTO_DAYS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTO_SECONDS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTO_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTRAILING)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTRANSACTION)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTRANSACTIONAL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTRIGGER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTRIGGERS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTRIM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTRUE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTRUNCATE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTYPE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTYPES_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUCS2)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUJIS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUNCOMMITTED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUNCOMPRESS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUNCOMPRESSED_LENGTH)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUNDEFINED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUNDO_BUFFER_SIZE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUNDO_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUNDOFILE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUNHEX)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUNICODE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUNINSTALL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUNION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUNIQUE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUNIX_TIMESTAMP)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUNKNOWN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUNLOCK_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUNSIGNED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUNTIL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUPDATE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUPGRADE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUPPER)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUSAGE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUSE_FRM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUSE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUSER)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUSING_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUTC_DATE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUTC_TIME)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUTC_TIMESTAMP)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUTF16LE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUTF16)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUTF32)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUTF8)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUUID)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mVALUE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mVALUES)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mVAR_POP)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mVAR_SAMP)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mVARBINARY)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mVARCHAR)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mVARIABLES)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mVARIANCE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mVARYING)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mVERSION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mVIEW_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mWAIT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mWARNINGS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mWEEK)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mWEEKDAY)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mWEEKOFYEAR)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mWEIGHT_STRING)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mWHEN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mWHERE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mWHILE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mWITH)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mWORK_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mWRAPPER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mWRITE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mX509_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mXA_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mXML_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mXOR)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mYEAR)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mYEAR_MONTH)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mYEARWEEK)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mZEROFILL)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDIVIDE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMOD_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mOR_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mAND_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mARROW)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mEQ_SYM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mNOT_EQ)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLET)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mGET)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSET_VAR)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSHIFT_LEFT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSHIFT_RIGHT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mALL_FIELDS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSEMI)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCOLON)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mDOT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mCOMMA)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mASTERISK)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRPAREN)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLPAREN)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mRBRACK)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLBRACK)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPLUS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mMINUS)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mNEGATION)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mVERTBAR)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBITAND)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mPOWER_OP)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mGTH)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mLTH)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mINTEGER_NUM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mHEX_DIGIT_FRAGMENT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mHEX_DIGIT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mBIT_NUM)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mREAL_NUMBER)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTEXT_STRING)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mID)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUSER_VAR)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUSER_VAR_SUBFIX1)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUSER_VAR_SUBFIX2)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUSER_VAR_SUBFIX3)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mUSER_VAR_SUBFIX4)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mWHITE_SPACE)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mSL_COMMENT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mML_COMMENT)	(struct MySQLLexer_Ctx_struct * ctx);

     void
     (*mTokens)	(struct MySQLLexer_Ctx_struct * ctx);
    const char * (*getGrammarFileName)();
    void            (*reset)  (struct MySQLLexer_Ctx_struct * ctx);
    void	    (*free)   (struct MySQLLexer_Ctx_struct * ctx);
};

// Function protoypes for the constructor functions that external translation units
// such as delegators and delegates may wish to call.
//
ANTLR3_API pMySQLLexer MySQLLexerNew         (
pANTLR3_INPUT_STREAM
 instream);
ANTLR3_API pMySQLLexer MySQLLexerNewSSD      (
pANTLR3_INPUT_STREAM
 instream, pANTLR3_RECOGNIZER_SHARED_STATE state);

/** Symbolic definitions of all the tokens that the 
lexer
 will work with.
 * \{
 *
 * Antlr will define EOF, but we can't use that as it it is too common in
 * in C header files and that would be confusing. There is no way to filter this out at the moment
 * so we just undef it here for now. That isn't the value we get back from C recognizers
 * anyway. We are looking for ANTLR3_TOKEN_EOF.
 */
#ifdef	EOF
#undef	EOF
#endif
#ifdef	Tokens
#undef	Tokens
#endif
#define EOF      -1
#define ABS      4
#define ACCESSIBLE_SYM      5
#define ACOS      6
#define ACTION      7
#define ADDDATE      8
#define ADDTIME      9
#define ADD_SYM      10
#define AES_DECRYPT      11
#define AES_ENCRYPT      12
#define AFTER_SYM      13
#define AGAINST      14
#define AGGREGATE_SYM      15
#define ALGORITHM_SYM      16
#define ALL      17
#define ALL_FIELDS      18
#define ALTER      19
#define ANALYZE_SYM      20
#define AND_SYM      21
#define ANY      22
#define ARMSCII8      23
#define ARROW      24
#define ASC      25
#define ASCII_SYM      26
#define ASENSITIVE_SYM      27
#define ASIN      28
#define ASTERISK      29
#define AS_SYM      30
#define ATAN      31
#define ATAN2      32
#define AT_SYM      33
#define AUTHORS_SYM      34
#define AUTOEXTEND_SIZE_SYM      35
#define AUTO_INCREMENT      36
#define AVG      37
#define AVG_ROW_LENGTH      38
#define A_      39
#define BACKUP_SYM      40
#define BEFORE_SYM      41
#define BEGIN_SYM      42
#define BENCHMARK      43
#define BETWEEN      44
#define BIG5      45
#define BIGINT      46
#define BIN      47
#define BINARY      48
#define BINLOG_SYM      49
#define BITAND      50
#define BIT_AND      51
#define BIT_LENGTH      52
#define BIT_NUM      53
#define BIT_OR      54
#define BIT_SYM      55
#define BIT_XOR      56
#define BLOB_SYM      57
#define BLOCK_SYM      58
#define BOOLEAN_SYM      59
#define BOOL_SYM      60
#define BOTH      61
#define BTREE_SYM      62
#define BYTE_SYM      63
#define BY_SYM      64
#define B_      65
#define CACHE_SYM      66
#define CALL_SYM      67
#define CASCADE      68
#define CASCADED      69
#define CASE_SYM      70
#define CAST_SYM      71
#define CEIL      72
#define CEILING      73
#define CHAIN_SYM      74
#define CHANGE      75
#define CHANGED      76
#define CHAR      77
#define CHARACTER_SYM      78
#define CHARSET      79
#define CHAR_LENGTH      80
#define CHECKSUM_SYM      81
#define CHECK_SYM      82
#define CIPHER_SYM      83
#define CLIENT_SYM      84
#define CLOSE_SYM      85
#define COALESCE      86
#define CODE_SYM      87
#define COERCIBILITY      88
#define COLLATE_SYM      89
#define COLLATION      90
#define COLON      91
#define COLUMNS_SYM      92
#define COLUMN_FORMAT      93
#define COLUMN_SYM      94
#define COMMA      95
#define COMMENT_SYM      96
#define COMMITTED_SYM      97
#define COMMIT_SYM      98
#define COMPACT_SYM      99
#define COMPLETION_SYM      100
#define COMPRESS      101
#define COMPRESSED_SYM      102
#define CONCAT      103
#define CONCAT_WS      104
#define CONCURRENT      105
#define CONDITION_SYM      106
#define CONNECTION_ID      107
#define CONNECTION_SYM      108
#define CONSISTENT_SYM      109
#define CONSTRAINT      110
#define CONTAINS_SYM      111
#define CONTEXT_SYM      112
#define CONTINUE_SYM      113
#define CONTRIBUTORS_SYM      114
#define CONV      115
#define CONVERT_SYM      116
#define CONVERT_TZ      117
#define COPY_SYM      118
#define COS      119
#define COT      120
#define COUNT      121
#define CP1250      122
#define CP1251      123
#define CP1256      124
#define CP1257      125
#define CP850      126
#define CP852      127
#define CP866      128
#define CP932      129
#define CPU_SYM      130
#define CRC32      131
#define CREATE      132
#define CROSECOND      133
#define CROSS      134
#define CUBE_SYM      135
#define CURDATE      136
#define CURRENT_TIMESTAMP      137
#define CURRENT_USER      138
#define CURSOR_SYM      139
#define CURTIME      140
#define C_      141
#define DATABASE      142
#define DATAFILE_SYM      143
#define DATA_SYM      144
#define DATEDIFF      145
#define DATETIME      146
#define DATE_ADD      147
#define DATE_FORMAT      148
#define DATE_SUB      149
#define DATE_SYM      150
#define DAYNAME      151
#define DAYOFMONTH      152
#define DAYOFWEEK      153
#define DAYOFYEAR      154
#define DAY_HOUR      155
#define DAY_MICROSECOND      156
#define DAY_MINUTE      157
#define DAY_SECOND      158
#define DAY_SYM      159
#define DEALLOCATE_SYM      160
#define DEC8      161
#define DECIMAL_SYM      162
#define DECLARE_SYM      163
#define DECODE      164
#define DEFAULT      165
#define DEFINER      166
#define DEGREES      167
#define DELAYED_SYM      168
#define DELAY_KEY_WRITE_SYM      169
#define DELETE_SYM      170
#define DESC      171
#define DES_DECRYPT      172
#define DES_ENCRYPT      173
#define DES_KEY_FILE      174
#define DETERMINISTIC_SYM      175
#define DIRECTORY_SYM      176
#define DISABLE_SYM      177
#define DISCARD      178
#define DISK_SYM      179
#define DISTINCT      180
#define DISTINCTROW      181
#define DIVIDE      182
#define DOT      183
#define DOUBLE_SYM      184
#define DO_SYM      185
#define DROP      186
#define DUAL_SYM      187
#define DUMPFILE      188
#define DUPLICATE_SYM      189
#define DYNAMIC_SYM      190
#define D_      191
#define EACH_SYM      192
#define ELSE_SYM      193
#define ELSIF_SYM      194
#define ELT      195
#define ENABLE_SYM      196
#define ENCLOSED      197
#define ENCODE      198
#define ENCRYPT      199
#define ENDS_SYM      200
#define END_SYM      201
#define ENGINES_SYM      202
#define ENGINE_SYM      203
#define ENUM      204
#define EQ_SYM      205
#define ERRORS      206
#define ESCAPED      207
#define ESCAPE_SYM      208
#define EUCJPMS      209
#define EUCKR      210
#define EVENTS_SYM      211
#define EVENT_SYM      212
#define EVERY_SYM      213
#define EXCHANGE_SYM      214
#define EXCLUSIVE_SYM      215
#define EXECUTE_SYM      216
#define EXISTS      217
#define EXIT_SYM      218
#define EXP      219
#define EXPANSION_SYM      220
#define EXPORT_SET      221
#define EXTENDED_SYM      222
#define EXTENT_SIZE_SYM      223
#define EXTRACT      224
#define E_      225
#define FALSE_SYM      226
#define FAST_SYM      227
#define FAULTS_SYM      228
#define FETCH_SYM      229
#define FIELD      230
#define FIELDS_SYM      231
#define FILE_SYM      232
#define FIND_IN_SET      233
#define FIRST_SYM      234
#define FIXED_SYM      235
#define FLOAT_SYM      236
#define FLOOR      237
#define FLUSH_SYM      238
#define FORCE_SYM      239
#define FOREIGN      240
#define FORMAT      241
#define FOR_SYM      242
#define FOUND_ROWS      243
#define FOUND_SYM      244
#define FROM      245
#define FROM_BASE64      246
#define FROM_DAYS      247
#define FROM_UNIXTIME      248
#define FULL      249
#define FULLTEXT_SYM      250
#define FUNCTION_SYM      251
#define F_      252
#define GB2312      253
#define GBK      254
#define GEOMETRYCOLLECTION      255
#define GEOMETRY_SYM      256
#define GEOSTD8      257
#define GET      258
#define GET_FORMAT      259
#define GET_LOCK      260
#define GLOBAL_SYM      261
#define GRANT      262
#define GRANTS      263
#define GREEK      264
#define GROUP_CONCAT      265
#define GROUP_SYM      266
#define GTH      267
#define G_      268
#define HANDLER_SYM      269
#define HASH_SYM      270
#define HAVING      271
#define HEBREW      272
#define HELP_SYM      273
#define HEX      274
#define HEX_DIGIT      275
#define HEX_DIGIT_FRAGMENT      276
#define HIGH_PRIORITY      277
#define HOSTS_SYM      278
#define HOST_SYM      279
#define HOUR      280
#define HOUR_MICROSECOND      281
#define HOUR_MINUTE      282
#define HOUR_SECOND      283
#define HP8      284
#define H_      285
#define ID      286
#define IDENTIFIED_SYM      287
#define IF      288
#define IFNULL      289
#define IGNORE_SYM      290
#define IMPORT      291
#define INDEXES      292
#define INDEX_SYM      293
#define INET_ATON      294
#define INET_NTOA      295
#define INFILE      296
#define INITIAL_SIZE_SYM      297
#define INNER_SYM      298
#define INOUT_SYM      299
#define INPLACE_SYM      300
#define INSENSITIVE_SYM      301
#define INSERT      302
#define INSERT_METHOD      303
#define INSTALL_SYM      304
#define INSTR      305
#define INTEGER_NUM      306
#define INTEGER_SYM      307
#define INTERVAL_SYM      308
#define INTO      309
#define INT_SYM      310
#define INVOKER_SYM      311
#define IN_SYM      312
#define IO_SYM      313
#define IPC_SYM      314
#define ISOLATION      315
#define ISSUER_SYM      316
#define IS_FREE_LOCK      317
#define IS_SYM      318
#define IS_USED_LOCK      319
#define ITERATE_SYM      320
#define I_      321
#define JOIN_SYM      322
#define J_      323
#define KEYBCS2      324
#define KEYS      325
#define KEY_BLOCK_SIZE      326
#define KEY_SYM      327
#define KILL_SYM      328
#define KOI8R      329
#define KOI8U      330
#define K_      331
#define LANGUAGE      332
#define LAST_DAY      333
#define LAST_INSERT_ID      334
#define LAST_SYM      335
#define LATIN1      336
#define LATIN1_BIN      337
#define LATIN1_GENERAL_CS      338
#define LATIN2      339
#define LATIN5      340
#define LATIN7      341
#define LBRACK      342
#define LEADING      343
#define LEAVES      344
#define LEAVE_SYM      345
#define LEFT      346
#define LENGTH      347
#define LESS_SYM      348
#define LET      349
#define LEVEL_SYM      350
#define LIKE_SYM      351
#define LIMIT      352
#define LINEAR_SYM      353
#define LINES      354
#define LINESTRING      355
#define LIST_SYM      356
#define LN      357
#define LOAD      358
#define LOAD_FILE      359
#define LOCAL_SYM      360
#define LOCATE      361
#define LOCK      362
#define LOCKS_SYM      363
#define LOG      364
#define LOG10      365
#define LOG2      366
#define LOGFILE_SYM      367
#define LOGS_SYM      368
#define LONGBLOB      369
#define LONGTEXT      370
#define LONG_SYM      371
#define LOOP_SYM      372
#define LOWER      373
#define LOW_PRIORITY      374
#define LPAD      375
#define LPAREN      376
#define LTH      377
#define LTRIM      378
#define L_      379
#define MACCE      380
#define MACROMAN      381
#define MAKEDATE      382
#define MAKETIME      383
#define MAKE_SET      384
#define MASTER_CONNECT_RETRY      385
#define MASTER_HOST_SYM      386
#define MASTER_LOG_FILE_SYM      387
#define MASTER_LOG_POS_SYM      388
#define MASTER_PASSWORD_SYM      389
#define MASTER_PORT_SYM      390
#define MASTER_POS_WAIT      391
#define MASTER_SERVER_ID_SYM      392
#define MASTER_SSL_CAPATH_SYM      393
#define MASTER_SSL_CA_SYM      394
#define MASTER_SSL_CERT_SYM      395
#define MASTER_SSL_CIPHER_SYM      396
#define MASTER_SSL_KEY_SYM      397
#define MASTER_SSL_SYM      398
#define MASTER_SSL_VERIFY_SERVER_CERT      399
#define MASTER_SYM      400
#define MASTER_USER_SYM      401
#define MATCH      402
#define MAXVALUE_SYM      403
#define MAX_CONNECTIONS_PER_HOUR      404
#define MAX_QUERIES_PER_HOUR      405
#define MAX_ROWS      406
#define MAX_SIZE_SYM      407
#define MAX_SYM      408
#define MAX_UPDATES_PER_HOUR      409
#define MAX_USER_CONNECTIONS_SYM      410
#define MD5      411
#define MEDIUMBLOB      412
#define MEDIUMINT      413
#define MEDIUMTEXT      414
#define MEDIUM_SYM      415
#define MEMORY_SYM      416
#define MERGE_SYM      417
#define MICROSECOND      418
#define MID      419
#define MIGRATE_SYM      420
#define MINUS      421
#define MINUTE      422
#define MINUTE_MICROSECOND      423
#define MINUTE_SECOND      424
#define MIN_ROWS      425
#define MIN_SYM      426
#define ML_COMMENT      427
#define MOD      428
#define MODE_SYM      429
#define MODIFIES_SYM      430
#define MODIFY_SYM      431
#define MOD_SYM      432
#define MONTH      433
#define MONTHNAME      434
#define MULTILINESTRING      435
#define MULTIPOINT      436
#define MULTIPOLYGON      437
#define MUTEX_SYM      438
#define M_      439
#define NAMES_SYM      440
#define NAME_CONST      441
#define NAME_SYM      442
#define NATIONAL_SYM      443
#define NATURAL      444
#define NCHAR_SYM      445
#define NEGATION      446
#define NEW_SYM      447
#define NEXT_SYM      448
#define NODEGROUP_SYM      449
#define NONE_SYM      450
#define NOT_EQ      451
#define NOT_SYM      452
#define NOW      453
#define NO_SYM      454
#define NO_WAIT_SYM      455
#define NO_WRITE_TO_BINLOG      456
#define NULL_SYM      457
#define NUMERIC_SYM      458
#define NVARCHAR_SYM      459
#define N_      460
#define OCT      461
#define OFFSET_SYM      462
#define OJ_SYM      463
#define OLD_PASSWORD      464
#define ON      465
#define ONE_SHOT_SYM      466
#define ONE_SYM      467
#define OPEN_SYM      468
#define OPTIMIZE      469
#define OPTION      470
#define OPTIONALLY      471
#define OPTIONS_SYM      472
#define ORD      473
#define ORDER_SYM      474
#define OR_SYM      475
#define OUTER      476
#define OUTFILE      477
#define OUT_SYM      478
#define OWNER_SYM      479
#define O_      480
#define PACK_KEYS_SYM      481
#define PAGE_CHECKSUM_SYM      482
#define PAGE_SYM      483
#define PARSER_SYM      484
#define PARTIAL      485
#define PARTITIONING_SYM      486
#define PARTITIONS_SYM      487
#define PARTITION_SYM      488
#define PASSWORD      489
#define PERIOD_ADD      490
#define PERIOD_DIFF      491
#define PHASE_SYM      492
#define PI      493
#define PLUGINS_SYM      494
#define PLUGIN_SYM      495
#define PLUS      496
#define POINT_SYM      497
#define POLYGON      498
#define PORT_SYM      499
#define POW      500
#define POWER      501
#define POWER_OP      502
#define PRECISION      503
#define PREPARE_SYM      504
#define PRESERVE_SYM      505
#define PREV_SYM      506
#define PRIMARY_SYM      507
#define PRIVILEGES      508
#define PROCEDURE      509
#define PROCESS      510
#define PROCESSLIST_SYM      511
#define PROFILES_SYM      512
#define PROFILE_SYM      513
#define PURGE      514
#define P_      515
#define QUARTER      516
#define QUERY_SYM      517
#define QUICK      518
#define QUOTE      519
#define Q_      520
#define RADIANS      521
#define RAND      522
#define RANGE_SYM      523
#define RBRACK      524
#define READS_SYM      525
#define READ_ONLY_SYM      526
#define READ_SYM      527
#define READ_WRITE_SYM      528
#define REAL      529
#define REAL_NUMBER      530
#define REBUILD_SYM      531
#define RECOVER_SYM      532
#define REDOFILE_SYM      533
#define REDO_BUFFER_SIZE_SYM      534
#define REDUNDANT_SYM      535
#define REFERENCES      536
#define REGEXP      537
#define RELAY_LOG_FILE_SYM      538
#define RELAY_LOG_POS_SYM      539
#define RELEASE_LOCK      540
#define RELEASE_SYM      541
#define RELOAD      542
#define REMOVE_SYM      543
#define RENAME      544
#define REORGANIZE_SYM      545
#define REPAIR      546
#define REPEAT      547
#define REPEATABLE_SYM      548
#define REPLACE      549
#define REPLICATION      550
#define REQUIRE_SYM      551
#define RESET_SYM      552
#define RESOURCES      553
#define RESTORE_SYM      554
#define RESTRICT      555
#define RESUME_SYM      556
#define RETURNS_SYM      557
#define RETURN_SYM      558
#define REVERSE      559
#define REVOKE      560
#define RIGHT      561
#define ROLLBACK      562
#define ROLLUP_SYM      563
#define ROUND      564
#define ROUTINE_SYM      565
#define ROWS_SYM      566
#define ROW_FORMAT_SYM      567
#define ROW_SYM      568
#define RPAD      569
#define RPAREN      570
#define RTREE_SYM      571
#define RTRIM      572
#define R_      573
#define SAVEPOINT      574
#define SCHEDULE_SYM      575
#define SCHEMA      576
#define SECOND      577
#define SECOND_MICROSECOND      578
#define SECURITY_SYM      579
#define SEC_TO_TIME      580
#define SELECT      581
#define SEMI      582
#define SENSITIVE_SYM      583
#define SEPARATOR_SYM      584
#define SERIALIZABLE_SYM      585
#define SERIAL_SYM      586
#define SERVER_SYM      587
#define SESSION_SYM      588
#define SESSION_USER      589
#define SET_SYM      590
#define SET_VAR      591
#define SHARED_SYM      592
#define SHARE_SYM      593
#define SHIFT_LEFT      594
#define SHIFT_RIGHT      595
#define SHOW      596
#define SHUTDOWN      597
#define SIGN      598
#define SIGNED_SYM      599
#define SIMPLE_SYM      600
#define SIN      601
#define SJIS      602
#define SLAVE      603
#define SLEEP      604
#define SL_COMMENT      605
#define SMALLINT      606
#define SNAPSHOT_SYM      607
#define SOCKET_SYM      608
#define SONAME_SYM      609
#define SOUNDEX      610
#define SOUNDS_SYM      611
#define SOURCE_SYM      612
#define SPACE      613
#define SPATIAL_SYM      614
#define SPECIFIC_SYM      615
#define SQLEXCEPTION_SYM      616
#define SQLSTATE_SYM      617
#define SQLWARNING_SYM      618
#define SQL_BIG_RESULT      619
#define SQL_BUFFER_RESULT      620
#define SQL_CACHE_SYM      621
#define SQL_CALC_FOUND_ROWS      622
#define SQL_NO_CACHE_SYM      623
#define SQL_SMALL_RESULT      624
#define SQL_SYM      625
#define SQL_THREAD      626
#define SQRT      627
#define SSL_SYM      628
#define STARTING      629
#define STARTS_SYM      630
#define START_SYM      631
#define STATS_AUTO_RECALC      632
#define STATS_PERSISTENT      633
#define STATUS_SYM      634
#define STD      635
#define STDDEV      636
#define STDDEV_POP      637
#define STDDEV_SAMP      638
#define STOP_SYM      639
#define STORAGE_SYM      640
#define STRAIGHT_JOIN      641
#define STRCMP      642
#define STRING_SYM      643
#define STR_TO_DATE      644
#define SUBJECT_SYM      645
#define SUBPARTITIONS_SYM      646
#define SUBPARTITION_SYM      647
#define SUBSTRING      648
#define SUBSTRING_INDEX      649
#define SUBTIME      650
#define SUM      651
#define SUPER_SYM      652
#define SUSPEND_SYM      653
#define SWAPS_SYM      654
#define SWE7      655
#define SWITCHES_SYM      656
#define SYSDATE      657
#define SYSTEM_USER      658
#define S_      659
#define TABLE      660
#define TABLES      661
#define TABLESPACE      662
#define TABLE_CHECKSUM_SYM      663
#define TAN      664
#define TEMPORARY      665
#define TEMPTABLE_SYM      666
#define TERMINATED      667
#define TEXT_STRING      668
#define TEXT_SYM      669
#define THAN_SYM      670
#define THEN_SYM      671
#define TIMEDIFF      672
#define TIMESTAMP      673
#define TIMESTAMPADD      674
#define TIMESTAMPDIFF      675
#define TIME_FORMAT      676
#define TIME_SYM      677
#define TIME_TO_SEC      678
#define TINYBLOB      679
#define TINYINT      680
#define TINYTEXT      681
#define TIS620      682
#define TO_BASE64      683
#define TO_DAYS      684
#define TO_SECONDS      685
#define TO_SYM      686
#define TRAILING      687
#define TRANSACTION      688
#define TRANSACTIONAL_SYM      689
#define TRIGGERS_SYM      690
#define TRIGGER_SYM      691
#define TRIM      692
#define TRUE_SYM      693
#define TRUNCATE      694
#define TYPES_SYM      695
#define TYPE_SYM      696
#define T_      697
#define UCS2      698
#define UJIS      699
#define UNCOMMITTED_SYM      700
#define UNCOMPRESS      701
#define UNCOMPRESSED_LENGTH      702
#define UNDEFINED_SYM      703
#define UNDOFILE_SYM      704
#define UNDO_BUFFER_SIZE_SYM      705
#define UNDO_SYM      706
#define UNHEX      707
#define UNICODE_SYM      708
#define UNINSTALL_SYM      709
#define UNION_SYM      710
#define UNIQUE_SYM      711
#define UNIX_TIMESTAMP      712
#define UNKNOWN_SYM      713
#define UNLOCK_SYM      714
#define UNSIGNED_SYM      715
#define UNTIL_SYM      716
#define UPDATE      717
#define UPGRADE_SYM      718
#define UPPER      719
#define USAGE      720
#define USER      721
#define USER_VAR      722
#define USER_VAR_SUBFIX1      723
#define USER_VAR_SUBFIX2      724
#define USER_VAR_SUBFIX3      725
#define USER_VAR_SUBFIX4      726
#define USE_FRM      727
#define USE_SYM      728
#define USING_SYM      729
#define UTC_DATE      730
#define UTC_TIME      731
#define UTC_TIMESTAMP      732
#define UTF16      733
#define UTF16LE      734
#define UTF32      735
#define UTF8      736
#define UUID      737
#define U_      738
#define VALUES      739
#define VALUE_SYM      740
#define VARBINARY      741
#define VARCHAR      742
#define VARIABLES      743
#define VARIANCE      744
#define VARYING      745
#define VAR_POP      746
#define VAR_SAMP      747
#define VERSION_SYM      748
#define VERTBAR      749
#define VIEW_SYM      750
#define V_      751
#define WAIT_SYM      752
#define WARNINGS      753
#define WEEK      754
#define WEEKDAY      755
#define WEEKOFYEAR      756
#define WEIGHT_STRING      757
#define WHEN_SYM      758
#define WHERE      759
#define WHILE_SYM      760
#define WHITE_SPACE      761
#define WITH      762
#define WORK_SYM      763
#define WRAPPER_SYM      764
#define WRITE_SYM      765
#define W_      766
#define X509_SYM      767
#define XA_SYM      768
#define XML_SYM      769
#define XOR      770
#define X_      771
#define YEAR      772
#define YEARWEEK      773
#define YEAR_MONTH      774
#define Y_      775
#define ZEROFILL      776
#define Z_      777
#ifdef	EOF
#undef	EOF
#define	EOF	ANTLR3_TOKEN_EOF
#endif

#ifndef TOKENSOURCE
#define TOKENSOURCE(lxr) lxr->pLexer->rec->state->tokSource
#endif

/* End of token definitions for MySQLLexer
 * =============================================================================
 */
/** } */

#ifdef __cplusplus
}
#endif

#endif

/* END - Note:Keep extra line feed to satisfy UNIX systems */
